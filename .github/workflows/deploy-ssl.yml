name: Deploy SSL Certificates

on:
  push:
    branches: [ "main" ]
    paths:
      - 'k8s/cert-manager/**'
      - 'k8s/ingress.yaml'
      - '.github/workflows/deploy-ssl.yml'
  workflow_dispatch:

env:
  DOMAIN_NAME: ${{ vars.DOMAIN_NAME }}
  LETSENCRYPT_EMAIL: ${{ vars.LETSENCRYPT_EMAIL }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get AKS credentials
        run: |
          az aks get-credentials \
            --resource-group ${{ vars.RESOURCE_GROUP }} \
            --name ${{ vars.AKS_CLUSTER_NAME }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Set up Helm
        uses: azure/setup-helm@v3

      - name: Add cert-manager repo
        run: helm repo add jetstack https://charts.jetstack.io

      - name: Update Helm repos
        run: helm repo update

      - name: Create cert-manager namespace
        run: |
          kubectl apply -f k8s/cert-manager/namespace.yaml

      - name: Install cert-manager
        run: |
          helm upgrade --install cert-manager jetstack/cert-manager \
            --namespace cert-manager \
            --version v1.13.1 \
            --set installCRDs=true \
            --set global.leaderElection.namespace=cert-manager

      - name: Wait for cert-manager
        run: |
          kubectl wait --for=condition=available --timeout=300s deployment/cert-manager -n cert-manager
          kubectl wait --for=condition=available --timeout=300s deployment/cert-manager-webhook -n cert-manager
          kubectl wait --for=condition=available --timeout=300s deployment/cert-manager-cainjector -n cert-manager

      - name: Configure cluster issuer
        run: |
          # Replace variables in cluster issuer manifest
          envsubst < k8s/cert-manager/cluster-issuer.yaml | kubectl apply -f -

      - name: Update ingress with SSL
        run: |
          # Replace variables in ingress manifest
          envsubst < k8s/ingress.yaml | kubectl apply -f -

      - name: Wait for certificates
        run: |
          echo "Waiting for certificates to be ready..."
          kubectl wait --for=condition=ready --timeout=300s certificate/weather-app-tls -n app || true
          kubectl wait --for=condition=ready --timeout=300s certificate/grafana-tls -n monitoring || true

      - name: Get certificate status
        if: success()
        run: |
          echo "Certificate status:"
          kubectl get certificates -A
